/**
 * \mainpage C++ Servlet API
 *
 * C++ Servlet API documentation:
 *
 * Core classes:
 * <ul>
 *   <li>servlet::http_servlet - HTTP servlet base class.</li>
 *   <li>servlet::http_request - HTTP request class provides client request information.</li>
 *   <li>servlet::http_response - HTTP response class assists in working with HTTP response to the client.</li>
 *   <li>servlet::http_filter - Object to perform filtering on either HTTP request or HTTP response or both.</li>
 *   <li>servlet::URI - Class to work with Uniform Resource Identifier (URI).</li>
 *   <li>servlet::http_session - Provides persistence for user data across more than one request.</li>
 *   <li>servlet::servlet_config - Servlet initial configuration.</li>
 *   <li>servlet::servlet_context - Defines a set of methods that a servlet uses to communicate with
 *       its servlet container.</li>
 *   <li>servlet::cookie - HTTP cookie class.</li>
 *   <li>servlet::SSL_information - Provides available information about current SSL session.</li>
 *   <li>servlet::certificate - Provides available information about client of servlet security certificate.</li>
 *   <li>servlet::filter_chain - Chain of servlet::http_filter objects.</li>
 *   <li>servlet::http_request_wrapper - Convenience class to help adapting servlet::http_request interface.</li>
 *   <li>servlet::http_response_wrapper - Convenience class to help adapting servlet::http_response interface</li>
 * </ul>
 * Support classes:
 * <ul>
 *   <li>servlet::any_map - Map with value type <code>std::any</code></li>
 *   <li>servlet::linked_map - linked associative container</li>
 *   <li>servlet::lru_map - LRU (least recently used) timed cache</li>
 *   <li>servlet::basic_outstream - Output stream adapter</li>
 *   <li>servlet::basic_instream - Input stream adapter</li>
 *   <li>servlet::sink - Output sink category tag</li>
 *   <li>servlet::source - Input source category tag</li>
 *   <li>servlet::buffer_provider - Input/output buffer provider category tag</li>
 *   <li>servlet::string_sink - Implementation of sink to <code>std::string</code></li>
 *   <li>servlet::basic_sink - Generic sink interface</li>
 *   <li>servlet::basic_source - Generic source interface</li>
 *   <li>servlet::basic_out_filter - Generic output filter interface</li>
 *   <li>servlet::basic_in_filter - Generic input filter interface</li>
 *   <li>servlet::basic_filtered_sink - Implementation of filtered sink</li>
 *   <li>servlet::basic_filtered_source - Implementation of filtered source</li>
 *   <li>servlet::basic_stream_sink - Implementation of sink to <code>std::basic_ostream</code> adapter</li>
 *   <li>servlet::basic_stream_source - Implementation of <code>std::basic_istream</code> to source adapter</li>
 * </ul>
 * Logging framework classes:
 * <ul>
 *   <li>servlet::logging::logger - Logger class</li>
 *   <li>servlet::logging::level_logger - Logger for a logging level class</li>
 *   <li>servlet::logging::log_registry - Registry of servlet::logging::logger objects</li>
 *   <li>servlet::logging::log_output - Logging output</li>
 *   <li>servlet::logging::prefix_printer - Printer for logging line prefix</li>
 * </ul>
 * Exception classes:
 * <ul>
 *   <li>servlet::config_exception - Configuration exception</li>
 *   <li>servlet::security_exception - Security exception</li>
 *   <li>servlet::io_exception - Input/output exception</li>
 *   <li>servlet::null_pointer_exception - Access to <code>nullptr</code> object exception</li>
 *   <li>servlet::invalid_argument_exception - Invalid argument exception</li>
 *   <li>servlet::bad_cast - Bad cast exception</li>
 *   <li>servlet::uri_syntax_error - URI syntax error</li>
 *   <li>servlet::uri_builder_error - URI building error</li>
 * </ul>
 */
